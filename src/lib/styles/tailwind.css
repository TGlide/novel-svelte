*,
::before,
::after {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x: ;
	--tw-pan-y: ;
	--tw-pinch-zoom: ;
	--tw-scroll-snap-strictness: proximity;
	--tw-gradient-from-position: ;
	--tw-gradient-via-position: ;
	--tw-gradient-to-position: ;
	--tw-ordinal: ;
	--tw-slashed-zero: ;
	--tw-numeric-figure: ;
	--tw-numeric-spacing: ;
	--tw-numeric-fraction: ;
	--tw-ring-inset: ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur: ;
	--tw-brightness: ;
	--tw-contrast: ;
	--tw-grayscale: ;
	--tw-hue-rotate: ;
	--tw-invert: ;
	--tw-saturate: ;
	--tw-sepia: ;
	--tw-drop-shadow: ;
	--tw-backdrop-blur: ;
	--tw-backdrop-brightness: ;
	--tw-backdrop-contrast: ;
	--tw-backdrop-grayscale: ;
	--tw-backdrop-hue-rotate: ;
	--tw-backdrop-invert: ;
	--tw-backdrop-opacity: ;
	--tw-backdrop-saturate: ;
	--tw-backdrop-sepia: ;
	--tw-contain-size: ;
	--tw-contain-layout: ;
	--tw-contain-paint: ;
	--tw-contain-style: ;
}

::backdrop {
	--tw-border-spacing-x: 0;
	--tw-border-spacing-y: 0;
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	--tw-pan-x: ;
	--tw-pan-y: ;
	--tw-pinch-zoom: ;
	--tw-scroll-snap-strictness: proximity;
	--tw-gradient-from-position: ;
	--tw-gradient-via-position: ;
	--tw-gradient-to-position: ;
	--tw-ordinal: ;
	--tw-slashed-zero: ;
	--tw-numeric-figure: ;
	--tw-numeric-spacing: ;
	--tw-numeric-fraction: ;
	--tw-ring-inset: ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	--tw-blur: ;
	--tw-brightness: ;
	--tw-contrast: ;
	--tw-grayscale: ;
	--tw-hue-rotate: ;
	--tw-invert: ;
	--tw-saturate: ;
	--tw-sepia: ;
	--tw-drop-shadow: ;
	--tw-backdrop-blur: ;
	--tw-backdrop-brightness: ;
	--tw-backdrop-contrast: ;
	--tw-backdrop-grayscale: ;
	--tw-backdrop-hue-rotate: ;
	--tw-backdrop-invert: ;
	--tw-backdrop-opacity: ;
	--tw-backdrop-saturate: ;
	--tw-backdrop-sepia: ;
	--tw-contain-size: ;
	--tw-contain-layout: ;
	--tw-contain-paint: ;
	--tw-contain-style: ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
	box-sizing: border-box;
	/* 1 */
	border-width: 0;
	/* 2 */
	border-style: solid;
	/* 2 */
	border-color: #e5e7eb;
	/* 2 */
}

::before,
::after {
	--tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
	line-height: 1.5;
	/* 1 */
	-webkit-text-size-adjust: 100%;
	/* 2 */
	-moz-tab-size: 4;
	/* 3 */
	-o-tab-size: 4;
	tab-size: 4;
	/* 3 */
	font-family: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
		'Segoe UI Symbol', 'Noto Color Emoji';
	/* 4 */
	font-feature-settings: normal;
	/* 5 */
	font-variation-settings: normal;
	/* 6 */
	-webkit-tap-highlight-color: transparent;
	/* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
	margin: 0;
	/* 1 */
	line-height: inherit;
	/* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
	height: 0;
	/* 1 */
	color: inherit;
	/* 2 */
	border-top-width: 1px;
	/* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
	-webkit-text-decoration: underline dotted;
	text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
	font-size: inherit;
	font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
	color: inherit;
	text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
	font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
	font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',
		'Courier New', monospace;
	/* 1 */
	font-feature-settings: normal;
	/* 2 */
	font-variation-settings: normal;
	/* 3 */
	font-size: 1em;
	/* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
	text-indent: 0;
	/* 1 */
	border-color: inherit;
	/* 2 */
	border-collapse: collapse;
	/* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
	font-family: inherit;
	/* 1 */
	font-feature-settings: inherit;
	/* 1 */
	font-variation-settings: inherit;
	/* 1 */
	font-size: 100%;
	/* 1 */
	font-weight: inherit;
	/* 1 */
	line-height: inherit;
	/* 1 */
	letter-spacing: inherit;
	/* 1 */
	color: inherit;
	/* 1 */
	margin: 0;
	/* 2 */
	padding: 0;
	/* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
	text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
	-webkit-appearance: button;
	/* 1 */
	background-color: transparent;
	/* 2 */
	background-image: none;
	/* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
	outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
	box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
	vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
	-webkit-appearance: textfield;
	/* 1 */
	outline-offset: -2px;
	/* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
	-webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
	-webkit-appearance: button;
	/* 1 */
	font: inherit;
	/* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
	display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
	margin: 0;
}

fieldset {
	margin: 0;
	padding: 0;
}

legend {
	padding: 0;
}

ol,
ul,
menu {
	list-style: none;
	margin: 0;
	padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
	padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
	resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder,
textarea::-moz-placeholder {
	opacity: 1;
	/* 1 */
	color: #9ca3af;
	/* 2 */
}

input::placeholder,
textarea::placeholder {
	opacity: 1;
	/* 1 */
	color: #9ca3af;
	/* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role='button'] {
	cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
	cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
	display: block;
	/* 1 */
	vertical-align: middle;
	/* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
	max-width: 100%;
	height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden='until-found'])) {
	display: none;
}

.container {
	width: 100%;
}

@media (min-width: 640px) {
	.container {
		max-width: 640px;
	}
}

@media (min-width: 768px) {
	.container {
		max-width: 768px;
	}
}

@media (min-width: 1024px) {
	.container {
		max-width: 1024px;
	}
}

@media (min-width: 1280px) {
	.container {
		max-width: 1280px;
	}
}

@media (min-width: 1536px) {
	.container {
		max-width: 1536px;
	}
}

.prose-lg {
	font-size: 1.125rem;
	line-height: 1.7777778;
}

.prose-lg :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 1.3333333em;
	margin-bottom: 1.3333333em;
}

.prose-lg :where([class~='lead']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	font-size: 1.2222222em;
	line-height: 1.4545455;
	margin-top: 1.0909091em;
	margin-bottom: 1.0909091em;
}

.prose-lg :where(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 1.6666667em;
	margin-bottom: 1.6666667em;
	padding-inline-start: 1em;
}

.prose-lg :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	font-size: 2.6666667em;
	margin-top: 0;
	margin-bottom: 0.8333333em;
	line-height: 1;
}

.prose-lg :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	font-size: 1.6666667em;
	margin-top: 1.8666667em;
	margin-bottom: 1.0666667em;
	line-height: 1.3333333;
}

.prose-lg :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	font-size: 1.3333333em;
	margin-top: 1.6666667em;
	margin-bottom: 0.6666667em;
	line-height: 1.5;
}

.prose-lg :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 1.7777778em;
	margin-bottom: 0.4444444em;
	line-height: 1.5555556;
}

.prose-lg :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 1.7777778em;
	margin-bottom: 1.7777778em;
}

.prose-lg :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 1.7777778em;
	margin-bottom: 1.7777778em;
}

.prose-lg :where(picture > img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 0;
	margin-bottom: 0;
}

.prose-lg :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 1.7777778em;
	margin-bottom: 1.7777778em;
}

.prose-lg :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	font-size: 0.8888889em;
	border-radius: 0.3125rem;
	padding-top: 0.2222222em;
	padding-inline-end: 0.4444444em;
	padding-bottom: 0.2222222em;
	padding-inline-start: 0.4444444em;
}

.prose-lg :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	font-size: 0.8888889em;
}

.prose-lg :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	font-size: 0.8666667em;
}

.prose-lg :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	font-size: 0.875em;
}

.prose-lg :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	font-size: 0.8888889em;
	line-height: 1.75;
	margin-top: 2em;
	margin-bottom: 2em;
	border-radius: 0.375rem;
	padding-top: 1em;
	padding-inline-end: 1.5em;
	padding-bottom: 1em;
	padding-inline-start: 1.5em;
}

.prose-lg :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 1.3333333em;
	margin-bottom: 1.3333333em;
	padding-inline-start: 1.5555556em;
}

.prose-lg :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 1.3333333em;
	margin-bottom: 1.3333333em;
	padding-inline-start: 1.5555556em;
}

.prose-lg :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 0.6666667em;
	margin-bottom: 0.6666667em;
}

.prose-lg :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	padding-inline-start: 0.4444444em;
}

.prose-lg :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	padding-inline-start: 0.4444444em;
}

.prose-lg :where(.prose-lg > ul > li p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 0.8888889em;
	margin-bottom: 0.8888889em;
}

.prose-lg
	:where(.prose-lg > ul > li > p:first-child):not(
		:where([class~='not-prose'], [class~='not-prose'] *)
	) {
	margin-top: 1.3333333em;
}

.prose-lg
	:where(.prose-lg > ul > li > p:last-child):not(
		:where([class~='not-prose'], [class~='not-prose'] *)
	) {
	margin-bottom: 1.3333333em;
}

.prose-lg
	:where(.prose-lg > ol > li > p:first-child):not(
		:where([class~='not-prose'], [class~='not-prose'] *)
	) {
	margin-top: 1.3333333em;
}

.prose-lg
	:where(.prose-lg > ol > li > p:last-child):not(
		:where([class~='not-prose'], [class~='not-prose'] *)
	) {
	margin-bottom: 1.3333333em;
}

.prose-lg
	:where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 0.8888889em;
	margin-bottom: 0.8888889em;
}

.prose-lg :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 1.3333333em;
	margin-bottom: 1.3333333em;
}

.prose-lg :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 1.3333333em;
}

.prose-lg :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 0.6666667em;
	padding-inline-start: 1.5555556em;
}

.prose-lg :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 3.1111111em;
	margin-bottom: 3.1111111em;
}

.prose-lg :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 0;
}

.prose-lg :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 0;
}

.prose-lg :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 0;
}

.prose-lg :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 0;
}

.prose-lg :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	font-size: 0.8888889em;
	line-height: 1.5;
}

.prose-lg :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	padding-inline-end: 0.75em;
	padding-bottom: 0.75em;
	padding-inline-start: 0.75em;
}

.prose-lg :where(thead th:first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	padding-inline-start: 0;
}

.prose-lg :where(thead th:last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	padding-inline-end: 0;
}

.prose-lg :where(tbody td, tfoot td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	padding-top: 0.75em;
	padding-inline-end: 0.75em;
	padding-bottom: 0.75em;
	padding-inline-start: 0.75em;
}

.prose-lg
	:where(tbody td:first-child, tfoot td:first-child):not(
		:where([class~='not-prose'], [class~='not-prose'] *)
	) {
	padding-inline-start: 0;
}

.prose-lg
	:where(tbody td:last-child, tfoot td:last-child):not(
		:where([class~='not-prose'], [class~='not-prose'] *)
	) {
	padding-inline-end: 0;
}

.prose-lg :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 1.7777778em;
	margin-bottom: 1.7777778em;
}

.prose-lg :where(figure > *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 0;
	margin-bottom: 0;
}

.prose-lg :where(figcaption):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	font-size: 0.8888889em;
	line-height: 1.5;
	margin-top: 1em;
}

.prose-lg
	:where(.prose-lg > :first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-top: 0;
}

.prose-lg
	:where(.prose-lg > :last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
	margin-bottom: 0;
}

.prose-stone {
	--tw-prose-body: #44403c;
	--tw-prose-headings: #1c1917;
	--tw-prose-lead: #57534e;
	--tw-prose-links: #1c1917;
	--tw-prose-bold: #1c1917;
	--tw-prose-counters: #78716c;
	--tw-prose-bullets: #d6d3d1;
	--tw-prose-hr: #e7e5e4;
	--tw-prose-quotes: #1c1917;
	--tw-prose-quote-borders: #e7e5e4;
	--tw-prose-captions: #78716c;
	--tw-prose-kbd: #1c1917;
	--tw-prose-kbd-shadows: rgb(28 25 23 / 10%);
	--tw-prose-code: #1c1917;
	--tw-prose-pre-code: #e7e5e4;
	--tw-prose-pre-bg: #292524;
	--tw-prose-th-borders: #d6d3d1;
	--tw-prose-td-borders: #e7e5e4;
	--tw-prose-invert-body: #d6d3d1;
	--tw-prose-invert-headings: #fff;
	--tw-prose-invert-lead: #a8a29e;
	--tw-prose-invert-links: #fff;
	--tw-prose-invert-bold: #fff;
	--tw-prose-invert-counters: #a8a29e;
	--tw-prose-invert-bullets: #57534e;
	--tw-prose-invert-hr: #44403c;
	--tw-prose-invert-quotes: #f5f5f4;
	--tw-prose-invert-quote-borders: #44403c;
	--tw-prose-invert-captions: #a8a29e;
	--tw-prose-invert-kbd: #fff;
	--tw-prose-invert-kbd-shadows: rgb(255 255 255 / 10%);
	--tw-prose-invert-code: #fff;
	--tw-prose-invert-pre-code: #d6d3d1;
	--tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
	--tw-prose-invert-th-borders: #57534e;
	--tw-prose-invert-td-borders: #44403c;
}

.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}

.fixed {
	position: fixed;
}

.absolute {
	position: absolute;
}

.relative {
	position: relative;
}

.bottom-0 {
	bottom: 0px;
}

.right-0 {
	right: 0px;
}

.right-5 {
	right: 1.25rem;
}

.top-0 {
	top: 0px;
}

.top-5 {
	top: 1.25rem;
}

.top-full {
	top: 100%;
}

.z-10 {
	z-index: 10;
}

.z-50 {
	z-index: 50;
}

.z-\[999999\] {
	z-index: 999999;
}

.z-\[99999\] {
	z-index: 99999;
}

.z-\[9999\] {
	z-index: 9999;
}

.m-4 {
	margin: 1rem;
}

.my-1 {
	margin-top: 0.25rem;
	margin-bottom: 0.25rem;
}

.my-4 {
	margin-top: 1rem;
	margin-bottom: 1rem;
}

.-mb-2 {
	margin-bottom: -0.5rem;
}

.-mt-2 {
	margin-top: -0.5rem;
}

.mb-1 {
	margin-bottom: 0.25rem;
}

.mb-5 {
	margin-bottom: 1.25rem;
}

.mb-6 {
	margin-bottom: 1.5rem;
}

.ml-auto {
	margin-left: auto;
}

.mt-1 {
	margin-top: 0.25rem;
}

.mt-2 {
	margin-top: 0.5rem;
}

.mt-4 {
	margin-top: 1rem;
}

.block {
	display: block;
}

.flex {
	display: flex;
}

.h-10 {
	height: 2.5rem;
}

.h-3 {
	height: 0.75rem;
}

.h-4 {
	height: 1rem;
}

.h-auto {
	height: auto;
}

.h-full {
	height: 100%;
}

.max-h-80 {
	max-height: 20rem;
}

.max-h-\[330px\] {
	max-height: 330px;
}

.min-h-\[500px\] {
	min-height: 500px;
}

.w-10 {
	width: 2.5rem;
}

.w-3 {
	width: 0.75rem;
}

.w-4 {
	width: 1rem;
}

.w-48 {
	width: 12rem;
}

.w-60 {
	width: 15rem;
}

.w-72 {
	width: 18rem;
}

.w-\[24rem\] {
	width: 24rem;
}

.w-fit {
	width: -moz-fit-content;
	width: fit-content;
}

.w-full {
	width: 100%;
}

.min-w-\[200px\] {
	min-width: 200px;
}

.max-w-\[calc\(100vw-2rem\)\] {
	max-width: calc(100vw - 2rem);
}

.max-w-full {
	max-width: 100%;
}

.max-w-screen-lg {
	max-width: 1024px;
}

.flex-1 {
	flex: 1 1 0%;
}

.transform {
	transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
		scaleY(var(--tw-scale-y));
}

@keyframes spin {
	to {
		transform: rotate(360deg);
	}
}

.animate-spin {
	animation: spin 1s linear infinite;
}

.cursor-pointer {
	cursor: pointer;
}

.scroll-my-2 {
	scroll-margin-top: 0.5rem;
	scroll-margin-bottom: 0.5rem;
}

.list-outside {
	list-style-position: outside;
}

.list-decimal {
	list-style-type: decimal;
}

.list-disc {
	list-style-type: disc;
}

.flex-col {
	flex-direction: column;
}

.items-start {
	align-items: flex-start;
}

.items-end {
	align-items: flex-end;
}

.items-center {
	align-items: center;
}

.justify-center {
	justify-content: center;
}

.justify-between {
	justify-content: space-between;
}

.gap-1 {
	gap: 0.25rem;
}

.gap-2 {
	gap: 0.5rem;
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(0.5rem * var(--tw-space-x-reverse));
	margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.divide-x > :not([hidden]) ~ :not([hidden]) {
	--tw-divide-x-reverse: 0;
	border-right-width: calc(1px * var(--tw-divide-x-reverse));
	border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}

.divide-stone-200 > :not([hidden]) ~ :not([hidden]) {
	border-color: var(--novel-stone-200);
}

.overflow-hidden {
	overflow: hidden;
}

.overflow-y-auto {
	overflow-y: auto;
}

.whitespace-nowrap {
	white-space: nowrap;
}

.rounded {
	border-radius: 0.25rem;
}

.rounded-\[5px\] {
	border-radius: 5px;
}

.rounded-lg {
	border-radius: 0.5rem;
}

.rounded-md {
	border-radius: 0.375rem;
}

.rounded-sm {
	border-radius: 0.125rem;
}

.rounded-xl {
	border-radius: 0.75rem;
}

.border {
	border-width: 1px;
}

.border-l-4 {
	border-left-width: 4px;
}

.border-t {
	border-top-width: 1px;
}

.border-stone-200 {
	border-color: var(--novel-stone-200);
}

.border-stone-300 {
	border-color: var(--novel-stone-300);
}

.border-stone-700 {
	border-color: var(--novel-stone-700);
}

.bg-stone-100 {
	background-color: var(--novel-stone-100);
}

.bg-stone-200 {
	background-color: var(--novel-stone-200);
}

.bg-white {
	background-color: var(--novel-white);
}

.fill-stone-600 {
	fill: var(--novel-stone-600);
}

.p-1 {
	padding: 0.25rem;
}

.p-12 {
	padding: 3rem;
}

.p-2 {
	padding: 0.5rem;
}

.p-4 {
	padding: 1rem;
}

.p-5 {
	padding: 1.25rem;
}

.px-1 {
	padding-left: 0.25rem;
	padding-right: 0.25rem;
}

.px-1\.5 {
	padding-left: 0.375rem;
	padding-right: 0.375rem;
}

.px-2 {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}

.px-3 {
	padding-left: 0.75rem;
	padding-right: 0.75rem;
}

.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}

.px-8 {
	padding-left: 2rem;
	padding-right: 2rem;
}

.py-1 {
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
}

.py-1\.5 {
	padding-top: 0.375rem;
	padding-bottom: 0.375rem;
}

.py-2 {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}

.py-4 {
	padding-top: 1rem;
	padding-bottom: 1rem;
}

.py-px {
	padding-top: 1px;
	padding-bottom: 1px;
}

.pb-24 {
	padding-bottom: 6rem;
}

.pl-2 {
	padding-left: 0.5rem;
}

.text-left {
	text-align: left;
}

.font-default {
	font-family: var(--font-default), system-ui, sans-serif;
}

.font-mono {
	font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',
		'Courier New', monospace;
}

.text-base {
	font-size: 1rem;
	line-height: 1.5rem;
}

.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}

.text-xs {
	font-size: 0.75rem;
	line-height: 1rem;
}

.font-medium {
	font-weight: 500;
}

.italic {
	font-style: italic;
}

.leading-3 {
	line-height: 0.75rem;
}

.leading-normal {
	line-height: 1.5;
}

.leading-relaxed {
	line-height: 1.625;
}

.text-blue-500 {
	--tw-text-opacity: 1;
	color: rgb(59 130 246 / var(--tw-text-opacity, 1));
}

.text-red-600 {
	--tw-text-opacity: 1;
	color: rgb(220 38 38 / var(--tw-text-opacity, 1));
}

.text-stone-200 {
	color: var(--novel-stone-200);
}

.text-stone-400 {
	color: var(--novel-stone-400);
}

.text-stone-500 {
	color: var(--novel-stone-500);
}

.text-stone-600 {
	color: var(--novel-stone-600);
}

.text-stone-700 {
	color: var(--novel-stone-700);
}

.text-stone-800 {
	color: var(--novel-stone-800);
}

.text-stone-900 {
	color: var(--novel-stone-900);
}

.underline {
	text-decoration-line: underline;
}

.decoration-stone-400 {
	text-decoration-color: var(--novel-stone-400);
}

.underline-offset-4 {
	text-underline-offset: 4px;
}

.underline-offset-\[3px\] {
	text-underline-offset: 3px;
}

.opacity-40 {
	opacity: 0.4;
}

.shadow {
	--tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
	--tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
		var(--tw-shadow);
}

.shadow-md {
	--tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
	--tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
		var(--tw-shadow);
}

.shadow-xl {
	--tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
	--tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color),
		0 8px 10px -6px var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
		var(--tw-shadow);
}

.outline-none {
	outline: 2px solid transparent;
	outline-offset: 2px;
}

.filter {
	filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale)
		var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition-all {
	transition-property: all;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}

.transition-colors {
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}

.duration-200 {
	transition-duration: 200ms;
}

.ease-out {
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

@keyframes enter {
	from {
		opacity: var(--tw-enter-opacity, 1);
		transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0)
			scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1))
			rotate(var(--tw-enter-rotate, 0));
	}
}

@keyframes exit {
	to {
		opacity: var(--tw-exit-opacity, 1);
		transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0)
			scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1))
			rotate(var(--tw-exit-rotate, 0));
	}
}

.animate-in {
	animation-name: enter;
	animation-duration: 150ms;
	--tw-enter-opacity: initial;
	--tw-enter-scale: initial;
	--tw-enter-rotate: initial;
	--tw-enter-translate-x: initial;
	--tw-enter-translate-y: initial;
}

.fade-in {
	--tw-enter-opacity: 0;
}

.slide-in-from-top-1 {
	--tw-enter-translate-y: -0.25rem;
}

.duration-200 {
	animation-duration: 200ms;
}

.ease-out {
	animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.square-4 {
	width: 1rem;
	height: 1rem;
}

.square-5 {
	width: 1.25rem;
	height: 1.25rem;
}

.square-6 {
	width: 1.5rem;
	height: 1.5rem;
}

@media (prefers-color-scheme: dark) {
	.dark\:prose-invert {
		--tw-prose-body: var(--tw-prose-invert-body);
		--tw-prose-headings: var(--tw-prose-invert-headings);
		--tw-prose-lead: var(--tw-prose-invert-lead);
		--tw-prose-links: var(--tw-prose-invert-links);
		--tw-prose-bold: var(--tw-prose-invert-bold);
		--tw-prose-counters: var(--tw-prose-invert-counters);
		--tw-prose-bullets: var(--tw-prose-invert-bullets);
		--tw-prose-hr: var(--tw-prose-invert-hr);
		--tw-prose-quotes: var(--tw-prose-invert-quotes);
		--tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
		--tw-prose-captions: var(--tw-prose-invert-captions);
		--tw-prose-kbd: var(--tw-prose-invert-kbd);
		--tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
		--tw-prose-code: var(--tw-prose-invert-code);
		--tw-prose-pre-code: var(--tw-prose-invert-pre-code);
		--tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
		--tw-prose-th-borders: var(--tw-prose-invert-th-borders);
		--tw-prose-td-borders: var(--tw-prose-invert-td-borders);
	}
}

.hover\:bg-red-100:hover {
	--tw-bg-opacity: 1;
	background-color: rgb(254 226 226 / var(--tw-bg-opacity, 1));
}

.hover\:bg-stone-100:hover {
	background-color: var(--novel-stone-100);
}

.hover\:text-stone-600:hover {
	color: var(--novel-stone-600);
}

.focus\:outline-none:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}

.active\:bg-stone-200:active {
	background-color: var(--novel-stone-200);
}

.data-\[highlighted\]\:bg-stone-100[data-highlighted] {
	background-color: var(--novel-stone-100);
}

.prose-headings\:font-title
	:is(
		:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~='not-prose'], [class~='not-prose'] *))
	) {
	font-family: var(--font-title), system-ui, sans-serif;
}

@media (min-width: 640px) {
	.sm\:bottom-\[unset\] {
		bottom: unset;
	}

	.sm\:top-0 {
		top: 0px;
	}

	.sm\:mb-\[calc\(20vh\)\] {
		margin-bottom: calc(20vh);
	}

	.sm\:rounded-lg {
		border-radius: 0.5rem;
	}

	.sm\:border {
		border-width: 1px;
	}

	.sm\:border-none {
		border-style: none;
	}

	.sm\:bg-transparent {
		background-color: transparent;
	}

	.sm\:px-12 {
		padding-left: 3rem;
		padding-right: 3rem;
	}

	.sm\:px-4 {
		padding-left: 1rem;
		padding-right: 1rem;
	}

	.sm\:pb-12 {
		padding-bottom: 3rem;
	}

	.sm\:pt-\[15vh\] {
		padding-top: 15vh;
	}

	.sm\:shadow-lg {
		--tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
		--tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
			0 4px 6px -4px var(--tw-shadow-color);
		box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
			var(--tw-shadow);
	}
}

@media (min-width: 768px) {
	.md\:bottom-0 {
		bottom: 0px;
	}

	.md\:top-auto {
		top: auto;
	}
}

@media (prefers-color-scheme: dark) {
	.dark\:hover\:bg-red-800:hover {
		--tw-bg-opacity: 1;
		background-color: rgb(153 27 27 / var(--tw-bg-opacity, 1));
	}
}

